{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","hooks/useFacePositions.js","hooks/useAllMatches.js","comps/Modal.js","App.js","index.js"],"names":["Title","react_default","a","createElement","className","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getStorage","useStorage","image","_useState","useState","_useState2","Object","slicedToArray","progress","setProgress","_useState3","_useState4","error","setError","_useState5","url","loadLabeledImages","persons","Promise","all","map","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","label","queryImage","descriptions","img","results2","wrap","_context","prev","next","faceUrl","faceapi","sent","withFaceLandmarks","withFaceDescriptor","console","log","push","descriptor","abrupt","personId","concat","name","stop","_x","apply","this","arguments","extractFaceFromBox","_x2","_x3","_extractFaceFromBox","_callee5","imageRef","box","regionsToExtract","faceImages","outputImage","index","storage","uuid","storageRef","_context5","length","Image","src","toDataURL","uuidv4","ref","uploadString","getDownloadURL","findMatches","_ref2","_callee2","referenceImage","faceMatcher","labeledFaces","container","testImage","canvas","displaySize","detections","resizedDetections","_context2","faceLandmark68Net","loadFromUri","faceRecognitionNet","ssdMobilenetv1","URL","createObjectURL","file","withFaceDescriptors","document","append","width","height","d","match","findBestMatch","shape","values","detection","_x4","getPersons","_ref3","_callee3","_context3","getDocs","collection","forEach","doc","objectSpread","data","id","useEffect","storageSpace","uploadImage","uploadBytesResumable","on","snap","percentage","bytesTransferred","totalBytes","err","_callee4","createdAt","personLabel","_index","_context4","snapshot","Date","getTime","setDoc","fullName","split","distanceLeft","distanceTop","imageId","ProgressBar","setFile","_useStorage","framer_motion_es","div","initial","animate","UploadForm","_useState6","setImage","types","includes","type","onload","getImage","onChange","e","target","files","comps_ProgressBar","useFirestore","collectionName","docs","setDocs","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","documents","ImageGrid","setSelectedImg","li","key","layout","whileHover","opacity","s","onClick","alt","crossOrigin","transition","delay","useFacePositions","faces","setfacePos","where","useAllMatches","pos","setPos","Modal","selectedImg","updatedPersonName","setFriends","imgRef","useRef","canvasRef","addFriend","face","event","value","newName","updateDoc","fp","filter","p","i","updatePersonName","classList","contains","y","onMouseEnter","ctx","current","getContext","lineWidth","strokeStyle","strokeRect","style","left","top","placeholder","onKeyPress","bind","App","comps_Title","comps_UploadForm","comps_ImageGrid","comps_Modal","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.edbbfb36.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Bild Klassifizierung</h1>\n      <h2>Ihre Blider</h2>\n      <p>Tag die Leute!</p>\n    </div>\n  )\n}\n\nexport default Title;","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC2D-DvAAG88M3OkcAfsBTVOEgf0CVqD4E\",\n  authDomain: \"image-gallery-90dd1.firebaseapp.com\",\n  projectId: \"image-gallery-90dd1\",\n  storageBucket: \"image-gallery-90dd1.appspot.com\",\n  messagingSenderId: \"555600352265\",\n  appId: \"1:555600352265:web:beff715bc3ba9bd334d4d8\",\n  measurementId: \"G-H4D3Q2PQVM\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const storage = getStorage(app);\n// const projectStorage = firebase.storage();\n// const projectFirestore = firebase.firestore();\n// const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n","import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase/config\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport { collection, setDoc, doc, getDocs } from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  ref,\r\n  getStorage,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n  uploadString,\r\n} from \"firebase/storage\";\r\n// import * as faceapi from \"face-api.js\";\r\n\r\nconst useStorage = (image) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url] = useState(null);\r\n\r\n  function loadLabeledImages(persons) {\r\n    return Promise.all(\r\n      persons.map(async (label) => {\r\n        const queryImage = label.faceUrl;\r\n        const descriptions = [];\r\n        const img = await faceapi.fetchImage(queryImage);\r\n        const results2 = await faceapi\r\n          .detectSingleFace(img)\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptor();\r\n          console.log('Result', results2);\r\n        descriptions.push(results2.descriptor);\r\n        return new faceapi.LabeledFaceDescriptors(\r\n          label.personId.concat(\"$\", label.name),\r\n          descriptions\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  async function extractFaceFromBox(imageRef, box) {\r\n    const regionsToExtract = [new faceapi.Rect(box[0], box[1], box[2], box[3])];\r\n\r\n    let faceImages = await faceapi.extractFaces(imageRef, regionsToExtract);\r\n\r\n    if (faceImages.length === 0) {\r\n      console.log(\"No face found\");\r\n      return \"\";\r\n    } else {\r\n      const outputImage = new Image();\r\n      for (let index = 0; index < faceImages.length; index++) {\r\n        //console.log(faceImages[index].toDataURL());\r\n        outputImage.src = faceImages[index].toDataURL();\r\n      }\r\n\r\n      const storage = getStorage();\r\n      let uuid = uuidv4();\r\n      const storageRef = ref(storage, uuid);\r\n\r\n      // Data URL string\r\n      await uploadString(storageRef, outputImage.src, \"data_url\");\r\n      return await getDownloadURL(ref(storage, uuid));\r\n    }\r\n  }\r\n\r\n  const findMatches = async (persons) => {\r\n    await faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\");\r\n    await faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\");\r\n    await faceapi.nets.ssdMobilenetv1.loadFromUri(\"/models\");\r\n\r\n    /*reference image*/\r\n    const referenceImage = new Image();\r\n    referenceImage.src = URL.createObjectURL(image.file);\r\n\r\n    const resul = await faceapi\r\n      .detectAllFaces(referenceImage)\r\n      .withFaceLandmarks()\r\n      .withFaceDescriptors();\r\n    if (!resul.length) {\r\n      return;\r\n    }\r\n    let faceMatcher;\r\n    if (persons.length !== 0) {\r\n      let labeledFaces = await loadLabeledImages(persons);\r\n      console.log(\"Labeled Faces \", labeledFaces);\r\n      faceMatcher = new faceapi.FaceMatcher(labeledFaces, 0.6);\r\n    }\r\n    const container = document.createElement(\"div\");\r\n    let testImage = await faceapi.bufferToImage(image.file);\r\n    container.append(testImage);\r\n    let canvas = faceapi.createCanvasFromMedia(testImage);\r\n    container.append(canvas);\r\n    const displaySize = { width: testImage.width, height: testImage.height };\r\n    faceapi.matchDimensions(canvas, displaySize);\r\n    const detections = await faceapi\r\n      .detectAllFaces(testImage)\r\n      .withFaceLandmarks()\r\n      .withFaceDescriptors();\r\n    const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n    return resizedDetections.map((d) => ({\r\n      match: faceMatcher\r\n        ? faceMatcher.findBestMatch(d.descriptor)\r\n        : { label: \"$unknown\" },\r\n      shape: Object.values(d.detection.box),\r\n      personId: \"\",\r\n    }));\r\n  };\r\n  /*\r\n  const findFaceDetections = async () => {\r\n    const img = new Image();\r\n    img.src = URL.createObjectURL(image.file);\r\n\r\n    await faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\");\r\n\r\n    const detections = await faceapi.detectAllFaces(\r\n      img,\r\n      new faceapi.TinyFaceDetectorOptions()\r\n    );\r\n    return detections.map((d) => Object.values(d.box));\r\n  };\r\n*/\r\n  const getPersons = async () => {\r\n    let persons = [];\r\n    const querySnapshot = await getDocs(collection(db, \"persons\"));\r\n    querySnapshot.forEach((doc) => {\r\n      // doc.data() is never undefined for query doc snapshots\r\n      persons.push({ ...doc.data(), id: doc.id });\r\n    });\r\n    return persons;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageSpace = getStorage();\r\n    const imageRef = ref(storageSpace, image.file.name); // `/images/${image.name}`\r\n    const uploadImage = uploadBytesResumable(imageRef, image.file);\r\n\r\n    uploadImage.on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await getDownloadURL(uploadImage.snapshot.ref);\r\n        const createdAt = new Date().getTime();\r\n        let width = image.width;\r\n        let height = image.height;\r\n\r\n        await setDoc(doc(db, \"images\", image.file.name), {\r\n          name: image.file.name,\r\n          url,\r\n          createdAt,\r\n          width,\r\n          height,\r\n        });\r\n\r\n        //let detections = await findFaceDetections();\r\n        let persons = await getPersons();\r\n        let detections = await findMatches(persons);\r\n        console.log(\"Det\", detections);\r\n        if(!detections) {\r\n          detections = [];\r\n        }\r\n        const img = new Image();\r\n        img.src = URL.createObjectURL(image.file);\r\n        for (let index = 0; index < detections.length; index++) {\r\n          const personLabel = detections[index].match.label;\r\n          detections[index].fullName = '';\r\n          if (personLabel === \"unknown\" || personLabel.split(\"$\")[1] === \"unknown\") {\r\n            let data = await extractFaceFromBox(img, detections[index].shape);\r\n            let uuid = uuidv4();\r\n            detections[index].personId = uuid;\r\n            await setDoc(doc(db, \"persons\", uuid), {\r\n              faceUrl: data,\r\n              personId: uuid,\r\n              name: \"\",\r\n            });\r\n          } else {\r\n            detections[index].personId = personLabel.split(\"$\")[0];\r\n            detections[index].fullName = personLabel.split(\"$\")[1];\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < detections.length; index++) {\r\n          console.log('detloop', detections[index]);\r\n          await setDoc(\r\n            doc(db, \"facePositions\", image.file.name + \"-\" + index),\r\n            {\r\n              distanceLeft: detections[index].shape[0],\r\n              distanceTop: detections[index].shape[1],\r\n              length: detections[index].shape[2],\r\n              width: detections[index].shape[3],\r\n              createdAt,\r\n              imageId: image.file.name,\r\n              personId: detections[index].personId,\r\n              fullName: detections[index].fullName\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }, [image]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ image, setFile }) => {\n  const { progress, url } = useStorage(image);\n  console.log(progress, url);\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}\n    ></motion.div>\n  );\n} \n\nexport default ProgressBar;","import React, { useState, useEffect } from \"react\";\nimport ProgressBar from \"./ProgressBar\";\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [image, setImage] = useState();\n\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  useEffect(() => {\n    const getImage = () => {\n      const img = new Image();\n      img.src = URL.createObjectURL(file);\n\n      if (file && types.includes(file.type)) {\n        img.onload = () => {\n          setImage({\n            file: file,\n            width: img.width,\n            height: img.height,\n          });\n        };\n        setError(\"\");\n      } else {\n        setFile(null);\n        setError(\"Please select an image file (png or jpg)\");\n      }\n    };\n\n    file && getImage();\n  }, [file]);\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n        <span>+</span>\n      </label>\n      <div className=\"output\">\n        {error && <div className=\"error\">{error}</div>}\n        {file && <div>{file.name}</div>}\n        {image && file && (\n          <ProgressBar image={image} setFile={setFile} />\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import { useEffect, useState } from \"react\";\nimport { db } from \"../firebase/config\";\nimport { onSnapshot, collection, query, orderBy } from \"firebase/firestore\";\n\nconst useFirestore = (collectionName) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const q = query(\n      collection(db, collectionName),\n      orderBy(\"createdAt\", \"desc\")\n    );\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const documents = [];\n      querySnapshot.forEach((doc) => {\n        documents.push({ ...doc.data(), id: doc.id });\n      });\n      setDocs(documents);\n    });\n\n    return () => unsubscribe();\n  }, [collectionName]);\n  return { docs };\n};\n\nexport default useFirestore;\n","import React from \"react\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore(\"images\");\n\n  return (\n    <ul className=\"img-container\">\n      {docs &&\n        docs.map((doc) => (\n          <motion.li\n            className=\"img-item\"\n            key={doc.id}\n            layout\n \n            whileHover={{ opacity: 1 }}\n            s\n            onClick={() => setSelectedImg(doc)}\n          >\n            <motion.img\n              className=\"mot-img\"\n              src={doc.url}\n              width={doc.width/2}\n              height={doc.height/2}\n              alt=\"uploaded pic\"\n              crossOrigin='anonymous'\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n            <canvas\n              width={doc.width/2}\n              height={doc.height/2}\n            />\n          </motion.li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ImageGrid;\n","import { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase/config\";\r\nimport { onSnapshot, collection, query, where } from \"firebase/firestore\";\r\n\r\nconst useFacePositions = (imageId) => {\r\n  const [faces, setfacePos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, 'facePositions'), where('imageId', '==', imageId));\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n        const documents = [];\r\n        querySnapshot.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setfacePos(documents);\r\n      });\r\n  \r\n      return () => unsubscribe();\r\n    }, [imageId]);\r\n  return { faces };\r\n};\r\n\r\nexport default useFacePositions;\r\n","import { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase/config\";\r\nimport { onSnapshot, collection, query } from \"firebase/firestore\";\r\n\r\nconst useAllMatches = (personId) => {\r\n  const [pos, setPos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, 'facePositions'));\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n        const documents = [];\r\n        querySnapshot.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        console.log('Doc', documents);\r\n        setPos(documents);\r\n      });\r\n  \r\n      return () => unsubscribe();\r\n    }, [personId]);\r\n  return { pos };\r\n};\r\n\r\nexport default useAllMatches;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useFacePositions from \"../hooks/useFacePositions\";\r\nimport { motion } from \"framer-motion\";\r\nimport { updateDoc, doc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/config\";\r\nimport useAllMatches from \"../hooks/useAllMatches\";\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n  const [updatedPersonName, setFriends] = useState([]);\r\n  const imgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const { faces } = useFacePositions(selectedImg.id);\r\n  const { pos } = useAllMatches(selectedImg.id);\r\n\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImg(null);\r\n      setFriends(null);\r\n    }\r\n  };\r\n\r\n  const enter = () => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.lineWidth = 5;\r\n    ctx.strokeStyle = \"blue\";\r\n    faces.map((face) =>\r\n      ctx.strokeRect(\r\n        face.distanceLeft,\r\n        face.distanceTop,\r\n        face.length,\r\n        face.width\r\n      )\r\n    );\r\n  };\r\n\r\n  function addFriend(face, event) {\r\n    console.log(\"Update face \", face);\r\n    if (event.key === \"Enter\" && event.target.value !== \"\") {\r\n      console.log(\"Update name to \", event.target.value);\r\n      setFriends({\r\n        id: face.personId,\r\n        faceUrl: face.faceUrl,\r\n        newName: event.target.value,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const updatePersonName = () => {\r\n      updateDoc(doc(db, \"persons\", updatedPersonName.id), {\r\n        name: updatedPersonName.newName,\r\n      });\r\n      console.log('Pos:', pos);\r\n      let fp = pos.filter(function (p) {\r\n        return p.personId === \r\n         updatedPersonName.id;\r\n      });\r\n      for (let i = 0; i < fp.length; i++) {\r\n        updateDoc(doc(db, \"facePositions\", fp[i].id), {\r\n          fullName: updatedPersonName.newName\r\n        });\r\n      }\r\n    };\r\n\r\n    updatedPersonName &&\r\n      pos &&\r\n      updatedPersonName.id &&\r\n      updatedPersonName.newName &&\r\n      updatePersonName();\r\n  }, [updatedPersonName]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        ref={imgRef}\r\n        className=\"backdrop\"\r\n        crossOrigin=\"anonymous\"\r\n        src={selectedImg.url}\r\n        alt=\"enlarged pic\"\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n      <canvas\r\n        className=\"backdrop\"\r\n        onMouseEnter={enter}\r\n        ref={canvasRef}\r\n        width={selectedImg.width}\r\n        height={selectedImg.height}\r\n      />\r\n      {faces &&\r\n        faces.map((face, i) => (\r\n          <input\r\n            name={`input${i}`}\r\n            style={{\r\n              left: face.distanceLeft,\r\n              top: face.distanceTop + face.width + 5,\r\n            }}\r\n            placeholder={face.fullName === \"\" ? \"Add name\" : face.fullName}\r\n            key={i}\r\n            className=\"friendInput\"\r\n            onKeyPress={addFriend.bind(this, face)}\r\n          />\r\n        ))}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Modal from \"./comps/Modal\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}